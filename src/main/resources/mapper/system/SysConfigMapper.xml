<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cctv.project.noah.system.mapper.SysConfigMapper">
  <resultMap id="BaseResultMap" type="com.cctv.project.noah.system.entity.SysConfig">
    <id column="config_id" jdbcType="INTEGER" property="configId" />
    <result column="config_name" jdbcType="VARCHAR" property="configName" />
    <result column="config_key" jdbcType="VARCHAR" property="configKey" />
    <result column="config_value" jdbcType="VARCHAR" property="configValue" />
    <result column="config_type" jdbcType="CHAR" property="configType" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    config_id, config_name, config_key, config_value, config_type, create_by, create_time, 
    update_by, update_time, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_config
    where config_id = #{configId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_config
    where config_id = #{configId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cctv.project.noah.system.entity.SysConfig">
    insert into sys_config (config_id, config_name, config_key, 
      config_value, config_type, create_by, 
      create_time, update_by, update_time, 
      remark)
    values (#{configId,jdbcType=INTEGER}, #{configName,jdbcType=VARCHAR}, #{configKey,jdbcType=VARCHAR}, 
      #{configValue,jdbcType=VARCHAR}, #{configType,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cctv.project.noah.system.entity.SysConfig">
    insert into sys_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="configId != null">
        config_id,
      </if>
      <if test="configName != null">
        config_name,
      </if>
      <if test="configKey != null">
        config_key,
      </if>
      <if test="configValue != null">
        config_value,
      </if>
      <if test="configType != null">
        config_type,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="configId != null">
        #{configId,jdbcType=INTEGER},
      </if>
      <if test="configName != null">
        #{configName,jdbcType=VARCHAR},
      </if>
      <if test="configKey != null">
        #{configKey,jdbcType=VARCHAR},
      </if>
      <if test="configValue != null">
        #{configValue,jdbcType=VARCHAR},
      </if>
      <if test="configType != null">
        #{configType,jdbcType=CHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cctv.project.noah.system.entity.SysConfig">
    update sys_config
    <set>
      <if test="configName != null">
        config_name = #{configName,jdbcType=VARCHAR},
      </if>
      <if test="configKey != null">
        config_key = #{configKey,jdbcType=VARCHAR},
      </if>
      <if test="configValue != null">
        config_value = #{configValue,jdbcType=VARCHAR},
      </if>
      <if test="configType != null">
        config_type = #{configType,jdbcType=CHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where config_id = #{configId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cctv.project.noah.system.entity.SysConfig">
    update sys_config
    set config_name = #{configName,jdbcType=VARCHAR},
      config_key = #{configKey,jdbcType=VARCHAR},
      config_value = #{configValue,jdbcType=VARCHAR},
      config_type = #{configType,jdbcType=CHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where config_id = #{configId,jdbcType=INTEGER}
  </update>

  <select id="selectConfig" parameterType="com.cctv.project.noah.system.entity.SysConfig" resultMap="BaseResultMap">
    select config_id, config_name, config_key, config_value, config_type, create_by, create_time, update_by, update_time, remark
		from sys_config
    <where>
      <if test="configId !=null">
        and config_id = #{configId}
      </if>
      <if test="configKey !=null and configKey != ''">
        and config_key = #{configKey}
      </if>
    </where>
  </select>


  <select id="checkConfigKeyUnique" parameterType="String" resultMap="BaseResultMap">
    select config_id, config_name, config_key, config_value, config_type, create_by, create_time, update_by, update_time, remark
	from sys_config
    where config_key = #{configKey}
  </select>

  <insert id="insertConfig" parameterType="com.cctv.project.noah.system.entity.SysConfig">
    insert into sys_config (
    <if test="configName != null and configName != '' ">config_name,</if>
    <if test="configKey != null and configKey != '' ">config_key,</if>
    <if test="configValue != null and configValue != '' ">config_value,</if>
    <if test="configType != null and configType != '' ">config_type,</if>
    <if test="createBy != null and createBy != ''">create_by,</if>
    <if test="remark != null and remark != ''">remark,</if>
    create_time
    )values(
    <if test="configName != null and configName != ''">#{configName},</if>
    <if test="configKey != null and configKey != ''">#{configKey},</if>
    <if test="configValue != null and configValue != ''">#{configValue},</if>
    <if test="configType != null and configType != ''">#{configType},</if>
    <if test="createBy != null and createBy != ''">#{createBy},</if>
    <if test="remark != null and remark != ''">#{remark},</if>
    sysdate()
    )
  </insert>

  <update id="updateConfig" parameterType="com.cctv.project.noah.system.entity.SysConfig">
    update sys_config
    <set>
      <if test="configName != null and configName != ''">config_name = #{configName},</if>
      <if test="configKey != null and configKey != ''">config_key = #{configKey},</if>
      <if test="configValue != null and configValue != ''">config_value = #{configValue},</if>
      <if test="configType != null and configType != ''">config_type = #{configType},</if>
      <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
      <if test="remark != null">remark = #{remark},</if>
      update_time = sysdate()
    </set>
    where config_id = #{configId}
  </update>

  <delete id="deleteConfigByIds" parameterType="String">
    delete from sys_config where config_id in
    <foreach item="configId" collection="array" open="(" separator="," close=")">
      #{configId}
    </foreach>
  </delete>


  <select id="selectConfigList" parameterType="com.cctv.project.noah.system.entity.SysConfig" resultMap="BaseResultMap">
    select config_id, config_name, config_key, config_value, config_type, create_by, create_time, update_by, update_time, remark
    from sys_config
    <where>
      <if test="configName != null and configName != ''">
        AND config_name like concat('%', #{configName}, '%')
      </if>
      <if test="configType != null and configType != ''">
        AND config_type = #{configType}
      </if>
      <if test="configKey != null and configKey != ''">
        AND config_key like concat('%', #{configKey}, '%')
      </if>
      <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
        and date_format(create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
      </if>
      <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
        and date_format(create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
      </if>
    </where>
  </select>




</mapper>