<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cctv.project.noah.outsource.mapper.StaffInfoMapper">
  <resultMap id="BaseResultMap" type="com.cctv.project.noah.outsource.entity.StaffInfo">
    <id column="auto_id" jdbcType="INTEGER" property="autoId" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="staff_no" jdbcType="BIGINT" property="staffNo" />
    <result column="staff_name" jdbcType="VARCHAR" property="staffName" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="supplier_id" jdbcType="INTEGER" property="supplierId" />
    <result column="post_id" jdbcType="INTEGER" property="postId" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="is_replace" jdbcType="INTEGER" property="isReplace" />
    <result column="replace_group" jdbcType="INTEGER" property="replaceGroup" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="arrive_date" jdbcType="DATE" property="arriveDate" />
    <result column="leave_date" jdbcType="DATE" property="leaveDate" />
    <result column="leave_reason" jdbcType="VARCHAR" property="leaveReason" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    auto_id, order_no, staff_no, staff_name, id_card, supplier_id, post_id, department_id, 
    is_replace, replace_group, reason, arrive_date, leave_date, leave_reason, create_time, 
    `status`
  </sql>
  <select id="selectByExample" parameterType="com.cctv.project.noah.outsource.entity.StaffInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from staff_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="forUpdate != null and forUpdate == true">
      for update
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from staff_info
    where auto_id = #{autoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from staff_info
    where auto_id = #{autoId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cctv.project.noah.outsource.entity.StaffInfoExample">
    delete from staff_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="auto_id" keyProperty="autoId" parameterType="com.cctv.project.noah.outsource.entity.StaffInfo" useGeneratedKeys="true">
    insert into staff_info (order_no, staff_no, staff_name, 
      id_card, supplier_id, post_id, 
      department_id, is_replace, replace_group, 
      reason, arrive_date, leave_date, 
      leave_reason, create_time, `status`
      )
    values (#{orderNo,jdbcType=VARCHAR}, #{staffNo,jdbcType=BIGINT}, #{staffName,jdbcType=VARCHAR}, 
      #{idCard,jdbcType=VARCHAR}, #{supplierId,jdbcType=INTEGER}, #{postId,jdbcType=INTEGER}, 
      #{departmentId,jdbcType=INTEGER}, #{isReplace,jdbcType=INTEGER}, #{replaceGroup,jdbcType=INTEGER}, 
      #{reason,jdbcType=VARCHAR}, #{arriveDate,jdbcType=DATE}, #{leaveDate,jdbcType=DATE}, 
      #{leaveReason,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="auto_id" keyProperty="autoId" parameterType="com.cctv.project.noah.outsource.entity.StaffInfo" useGeneratedKeys="true">
    insert into staff_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="staffNo != null">
        staff_no,
      </if>
      <if test="staffName != null">
        staff_name,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="supplierId != null">
        supplier_id,
      </if>
      <if test="postId != null">
        post_id,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="isReplace != null">
        is_replace,
      </if>
      <if test="replaceGroup != null">
        replace_group,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="arriveDate != null">
        arrive_date,
      </if>
      <if test="leaveDate != null">
        leave_date,
      </if>
      <if test="leaveReason != null">
        leave_reason,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="staffNo != null">
        #{staffNo,jdbcType=BIGINT},
      </if>
      <if test="staffName != null">
        #{staffName,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null">
        #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="postId != null">
        #{postId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="isReplace != null">
        #{isReplace,jdbcType=INTEGER},
      </if>
      <if test="replaceGroup != null">
        #{replaceGroup,jdbcType=INTEGER},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="arriveDate != null">
        #{arriveDate,jdbcType=DATE},
      </if>
      <if test="leaveDate != null">
        #{leaveDate,jdbcType=DATE},
      </if>
      <if test="leaveReason != null">
        #{leaveReason,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cctv.project.noah.outsource.entity.StaffInfoExample" resultType="java.lang.Long">
    select count(*) from staff_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update staff_info
    <set>
      <if test="record.autoId != null">
        auto_id = #{record.autoId,jdbcType=INTEGER},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.staffNo != null">
        staff_no = #{record.staffNo,jdbcType=BIGINT},
      </if>
      <if test="record.staffName != null">
        staff_name = #{record.staffName,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null">
        id_card = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierId != null">
        supplier_id = #{record.supplierId,jdbcType=INTEGER},
      </if>
      <if test="record.postId != null">
        post_id = #{record.postId,jdbcType=INTEGER},
      </if>
      <if test="record.departmentId != null">
        department_id = #{record.departmentId,jdbcType=INTEGER},
      </if>
      <if test="record.isReplace != null">
        is_replace = #{record.isReplace,jdbcType=INTEGER},
      </if>
      <if test="record.replaceGroup != null">
        replace_group = #{record.replaceGroup,jdbcType=INTEGER},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.arriveDate != null">
        arrive_date = #{record.arriveDate,jdbcType=DATE},
      </if>
      <if test="record.leaveDate != null">
        leave_date = #{record.leaveDate,jdbcType=DATE},
      </if>
      <if test="record.leaveReason != null">
        leave_reason = #{record.leaveReason,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update staff_info
    set auto_id = #{record.autoId,jdbcType=INTEGER},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      staff_no = #{record.staffNo,jdbcType=BIGINT},
      staff_name = #{record.staffName,jdbcType=VARCHAR},
      id_card = #{record.idCard,jdbcType=VARCHAR},
      supplier_id = #{record.supplierId,jdbcType=INTEGER},
      post_id = #{record.postId,jdbcType=INTEGER},
      department_id = #{record.departmentId,jdbcType=INTEGER},
      is_replace = #{record.isReplace,jdbcType=INTEGER},
      replace_group = #{record.replaceGroup,jdbcType=INTEGER},
      reason = #{record.reason,jdbcType=VARCHAR},
      arrive_date = #{record.arriveDate,jdbcType=DATE},
      leave_date = #{record.leaveDate,jdbcType=DATE},
      leave_reason = #{record.leaveReason,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      `status` = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cctv.project.noah.outsource.entity.StaffInfo">
    update staff_info
    <set>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="staffNo != null">
        staff_no = #{staffNo,jdbcType=BIGINT},
      </if>
      <if test="staffName != null">
        staff_name = #{staffName,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null">
        supplier_id = #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="postId != null">
        post_id = #{postId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="isReplace != null">
        is_replace = #{isReplace,jdbcType=INTEGER},
      </if>
      <if test="replaceGroup != null">
        replace_group = #{replaceGroup,jdbcType=INTEGER},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="arriveDate != null">
        arrive_date = #{arriveDate,jdbcType=DATE},
      </if>
      <if test="leaveDate != null">
        leave_date = #{leaveDate,jdbcType=DATE},
      </if>
      <if test="leaveReason != null">
        leave_reason = #{leaveReason,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where auto_id = #{autoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cctv.project.noah.outsource.entity.StaffInfo">
    update staff_info
    set order_no = #{orderNo,jdbcType=VARCHAR},
      staff_no = #{staffNo,jdbcType=BIGINT},
      staff_name = #{staffName,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      supplier_id = #{supplierId,jdbcType=INTEGER},
      post_id = #{postId,jdbcType=INTEGER},
      department_id = #{departmentId,jdbcType=INTEGER},
      is_replace = #{isReplace,jdbcType=INTEGER},
      replace_group = #{replaceGroup,jdbcType=INTEGER},
      reason = #{reason,jdbcType=VARCHAR},
      arrive_date = #{arriveDate,jdbcType=DATE},
      leave_date = #{leaveDate,jdbcType=DATE},
      leave_reason = #{leaveReason,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=INTEGER}
    where auto_id = #{autoId,jdbcType=INTEGER}
  </update>
</mapper>