<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cctv.project.noah.outsource.mapper.AttendanceMapper">
  <resultMap id="BaseResultMap" type="com.cctv.project.noah.outsource.entity.Attendance">
    <id column="auto_id" jdbcType="BIGINT" property="autoId" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="staff_no" jdbcType="INTEGER" property="staffNo" />
    <result column="statistics_year" jdbcType="SMALLINT" property="statisticsYear" />
    <result column="statistics_month" jdbcType="TINYINT" property="statisticsMonth" />
    <result column="arrive_date" jdbcType="DATE" property="arriveDate" />
    <result column="leave_date" jdbcType="DATE" property="leaveDate" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="is_reject" jdbcType="TINYINT" property="isReject" />
    <result column="serve_days_expect" jdbcType="REAL" property="serveDaysExpect" />
    <result column="serve_days_actual" jdbcType="REAL" property="serveDaysActual" />
    <result column="instead_candidate_id" jdbcType="INTEGER" property="insteadCandidateId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    auto_id, order_no, staff_no, statistics_year, statistics_month, arrive_date, leave_date,
    remark, is_reject, serve_days_expect, serve_days_actual, instead_candidate_id, create_time,
    `status`
  </sql>
  <select id="selectByExample" parameterType="com.cctv.project.noah.outsource.entity.AttendanceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from attendance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="forUpdate != null and forUpdate == true">
      for update
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from attendance
    where auto_id = #{autoId,jdbcType=BIGINT}
  </select>
  <select id="selectAttendanceCount" parameterType="com.cctv.project.noah.outsource.entity.AttendanceCount" resultType="com.cctv.project.noah.outsource.entity.AttendanceCount">
    SELECT
	c.project_name projectName,
	b.order_no orderNo,
	d.department_name departmentName,
	g.candidate_name personName,
	f.post_name postName,
	e.supplier_name supplierName,
	a.serve_days_expect serveDaysExpect,
	a.serve_days_actual serveDaysActual,
	a.remark remark,
	a.arrive_date arriveDate,
	a.leave_date leaveDate,
	a.auto_id autoId
    FROM
      attendance a
    LEFT JOIN `interview_info` b ON a.order_no = b.order_no
    LEFT JOIN project_info c ON b.project_id = c.project_id
    LEFT JOIN department_info d ON c.department_id = d.department_id
    LEFT JOIN supplier_info e ON b.supplier_id = e.supplier_id
    LEFT JOIN post_info f ON b.post_id = f.post_id
    LEFT JOIN person_info g ON a.candidate_id = g.candidate_id
    WHERE
      a.`statistics_year` = #{statisticsYear}
    AND a.statistics_month = #{statisticsMonth}
  </select>
  <select id="selectAttendanceCountByIds" parameterType="com.cctv.project.noah.outsource.entity.AttendanceCount" resultType="com.cctv.project.noah.outsource.entity.AttendanceCount">
    SELECT
	c.project_name projectName,
	b.order_no orderNo,
	d.department_name departmentName,
	g.candidate_name personName,
	f.post_name postName,
	e.supplier_name supplierName,
	a.serve_days_expect serveDaysExpect,
	a.serve_days_actual serveDaysActual,
	a.remark remark,
	a.arrive_date arriveDate,
	a.leave_date leaveDate,
	a.auto_id autoId
    FROM
      attendance a
    LEFT JOIN `interview_info` b ON a.order_no = b.order_no
    LEFT JOIN project_info c ON b.project_id = c.project_id
    LEFT JOIN department_info d ON c.department_id = d.department_id
    LEFT JOIN supplier_info e ON b.supplier_id = e.supplier_id
    LEFT JOIN post_info f ON b.post_id = f.post_id
    LEFT JOIN person_info g ON a.candidate_id = g.candidate_id
    WHERE
    a.auto_id in
    <foreach collection="array" item="id"  open="(" separator="," close=")">
      #{id}
    </foreach>
  </select>
  <select id="selectBySelective" parameterType="com.cctv.project.noah.outsource.entity.Attendance" resultMap="BaseResultMap">
    SELECT
    a.auto_id,
    a.order_no order_no,
    a.candidate_id candidate_id,
    a.statistics_year statistics_year,
    a.statistics_month statistics_month,
    a.arrive_date arrive_date,
    a.leave_date leave_date,
    a.remark remark,
    a.is_reject is_reject,
    a.serve_days_expect serve_days_expect,
    a.serve_days_actual serve_days_actual,
    a.instead_candidate_id instead_candidate_id,
    a.create_time create_time,
    p1.candidate_name personName,
    p2.candidate_name insteadCandidateName
    FROM
    attendance a
    INNER JOIN person_info p1 ON a.candidate_id = p1.candidate_id
    LEFT JOIN person_info p2 ON a.instead_candidate_id = p2.candidate_id
    <where>
      <if test="orderNo != null">
        and a.order_no like concat('%', #{orderNo}, '%')
      </if>
      <if test="candidateId != null">
        and a.candidate_id = #{candidateId,jdbcType=INTEGER}
      </if>
      <if test="statisticsYear != null">
        and a.statistics_year = #{statisticsYear,jdbcType=SMALLINT}
      </if>
      <if test="statisticsMonth != null">
        and a.statistics_month = #{statisticsMonth,jdbcType=TINYINT}
      </if>
      <if test="params!=null and params.arriveDateStart != null and params.arriveDateStart != ''"><!-- 开始时间检索 -->
        AND date_format(a.arrive_date,'%y%m%d') &gt;= date_format(#{params.arriveDateStart},'%y%m%d')
      </if>
      <if test="params!=null and params.arriveDateEnd != null and params.arriveDateEnd != ''"><!-- 结束时间检索 -->
        AND date_format(a.arrive_date,'%y%m%d') &lt;= date_format(#{params.arriveDateEnd},'%y%m%d')
      </if>
      <if test="params!=null and params.leaveDateStart != null and params.leaveDateStart != ''"><!-- 开始时间检索 -->
        AND date_format(a.leave_date,'%y%m%d') &gt;= date_format(#{params.arriveDateStart},'%y%m%d')
      </if>
      <if test="params!=null and params.leaveDateEnd != null and params.leaveDateEnd != ''"><!-- 结束时间检索 -->
        AND date_format(a.leave_date,'%y%m%d') &lt;= date_format(#{params.arriveDateEnd},'%y%m%d')
      </if>
      <if test="remark != null">
        and a.remark = #{remark,jdbcType=VARCHAR}
      </if>
      <if test="isReject != null">
        and a.is_reject = #{isReject,jdbcType=TINYINT}
      </if>
      <if test="serveDaysExpect != null">
        and a.serve_days_expect = #{serveDaysExpect,jdbcType=REAL}
      </if>
      <if test="serveDaysActual != null">
        and a.serve_days_actual = #{serveDaysActual,jdbcType=REAL}
      </if>
      <if test="insteadCandidateId != null">
        and a.instead_candidate_id = #{insteadCandidateId,jdbcType=INTEGER}
      </if>
      <if test="params!=null and params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
        AND date_format(a.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
      </if>
      <if test="params!=null and params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
        AND date_format(a.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
      </if>
    </where>
  </select>
  <select id="selectByRepeat" parameterType="com.cctv.project.noah.outsource.entity.Attendance" resultMap="BaseResultMap">
    SELECT
    a.auto_id,
    a.order_no order_no,
    a.candidate_id candidate_id,
    a.statistics_year statistics_year,
    a.statistics_month statistics_month,
    a.arrive_date arrive_date,
    a.leave_date leave_date,
    a.remark remark,
    a.is_reject is_reject,
    a.serve_days_expect serve_days_expect,
    a.serve_days_actual serve_days_actual,
    a.instead_candidate_id instead_candidate_id,
    a.create_time create_time,
    p1.candidate_name personName,
    p2.candidate_name insteadCandidateName
    FROM
    attendance a
    INNER JOIN person_info p1 ON a.candidate_id = p1.candidate_id
    LEFT JOIN person_info p2 ON a.instead_candidate_id = p2.candidate_id
    <where>
      <if test="orderNo != null">
        and a.order_no = #{orderNo,jdbcType=VARCHAR}
      </if>
      <if test="candidateId != null">
        and a.candidate_id = #{candidateId,jdbcType=INTEGER}
      </if>
      <if test="statisticsYear != null">
        and a.statistics_year = #{statisticsYear,jdbcType=SMALLINT}
      </if>
      <if test="statisticsMonth != null">
        and a.statistics_month = #{statisticsMonth,jdbcType=TINYINT}
      </if>
    </where>

  </select>
  <select id="selectByIds" resultMap="BaseResultMap">
    SELECT
    a.auto_id,
    a.order_no order_no,
    a.candidate_id candidate_id,
    a.statistics_year statistics_year,
    a.statistics_month statistics_month,
    a.arrive_date arrive_date,
    a.leave_date leave_date,
    a.remark remark,
    a.is_reject is_reject,
    a.serve_days_expect serve_days_expect,
    a.serve_days_actual serve_days_actual,
    a.instead_candidate_id instead_candidate_id,
    a.create_time create_time,
    p1.candidate_name personName,
    p2.candidate_name insteadCandidateName
    FROM
    attendance a
    INNER JOIN person_info p1 ON a.candidate_id = p1.candidate_id
    LEFT JOIN person_info p2 ON a.instead_candidate_id = p2.candidate_id
    where a.auto_id in
    <foreach collection="array" item="id"  open="(" separator="," close=")">
      #{id}
    </foreach>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from attendance
    where auto_id = #{autoId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.cctv.project.noah.outsource.entity.AttendanceExample">
    delete from attendance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="auto_id" keyProperty="autoId" parameterType="com.cctv.project.noah.outsource.entity.Attendance" useGeneratedKeys="true">
    insert into attendance (order_no, staff_no, statistics_year,
      statistics_month, arrive_date, leave_date, 
      remark, is_reject, serve_days_expect, 
      serve_days_actual, instead_candidate_id, create_time,
      `status`)
    values (#{orderNo,jdbcType=VARCHAR}, #{staffNo,jdbcType=INTEGER}, #{statisticsYear,jdbcType=SMALLINT},
      #{statisticsMonth,jdbcType=TINYINT}, #{arriveDate,jdbcType=DATE}, #{leaveDate,jdbcType=DATE}, 
      #{remark,jdbcType=VARCHAR}, #{isReject,jdbcType=TINYINT}, #{serveDaysExpect,jdbcType=REAL}, 
      #{serveDaysActual,jdbcType=REAL}, #{insteadCandidateId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="auto_id" keyProperty="autoId" parameterType="com.cctv.project.noah.outsource.entity.Attendance" useGeneratedKeys="true">
    insert into attendance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="staffNo != null">
        staff_no,
      </if>
      <if test="statisticsYear != null">
        statistics_year,
      </if>
      <if test="statisticsMonth != null">
        statistics_month,
      </if>
      <if test="arriveDate != null">
        arrive_date,
      </if>
      <if test="leaveDate != null">
        leave_date,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="isReject != null">
        is_reject,
      </if>
      <if test="serveDaysExpect != null">
        serve_days_expect,
      </if>
      <if test="serveDaysActual != null">
        serve_days_actual,
      </if>
      <if test="insteadCandidateId != null">
        instead_candidate_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="staffNo != null">
        #{staffNo,jdbcType=INTEGER},
      </if>
      <if test="statisticsYear != null">
        #{statisticsYear,jdbcType=SMALLINT},
      </if>
      <if test="statisticsMonth != null">
        #{statisticsMonth,jdbcType=TINYINT},
      </if>
      <if test="arriveDate != null">
        #{arriveDate,jdbcType=DATE},
      </if>
      <if test="leaveDate != null">
        #{leaveDate,jdbcType=DATE},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isReject != null">
        #{isReject,jdbcType=TINYINT},
      </if>
      <if test="serveDaysExpect != null">
        #{serveDaysExpect,jdbcType=REAL},
      </if>
      <if test="serveDaysActual != null">
        #{serveDaysActual,jdbcType=REAL},
      </if>
      <if test="insteadCandidateId != null">
        #{insteadCandidateId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cctv.project.noah.outsource.entity.AttendanceExample" resultType="java.lang.Long">
    select count(*) from attendance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update attendance
    <set>
      <if test="record.autoId != null">
        auto_id = #{record.autoId,jdbcType=BIGINT},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.staffNo != null">
        staff_no = #{record.staffNo,jdbcType=INTEGER},
      </if>
      <if test="record.statisticsYear != null">
        statistics_year = #{record.statisticsYear,jdbcType=SMALLINT},
      </if>
      <if test="record.statisticsMonth != null">
        statistics_month = #{record.statisticsMonth,jdbcType=TINYINT},
      </if>
      <if test="record.arriveDate != null">
        arrive_date = #{record.arriveDate,jdbcType=DATE},
      </if>
      <if test="record.leaveDate != null">
        leave_date = #{record.leaveDate,jdbcType=DATE},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.isReject != null">
        is_reject = #{record.isReject,jdbcType=TINYINT},
      </if>
      <if test="record.serveDaysExpect != null">
        serve_days_expect = #{record.serveDaysExpect,jdbcType=REAL},
      </if>
      <if test="record.serveDaysActual != null">
        serve_days_actual = #{record.serveDaysActual,jdbcType=REAL},
      </if>
      <if test="record.insteadCandidateId != null">
        instead_candidate_id = #{record.insteadCandidateId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update attendance
    set auto_id = #{record.autoId,jdbcType=BIGINT},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      staff_no = #{record.staffNo,jdbcType=INTEGER},
      statistics_year = #{record.statisticsYear,jdbcType=SMALLINT},
      statistics_month = #{record.statisticsMonth,jdbcType=TINYINT},
      arrive_date = #{record.arriveDate,jdbcType=DATE},
      leave_date = #{record.leaveDate,jdbcType=DATE},
      remark = #{record.remark,jdbcType=VARCHAR},
      is_reject = #{record.isReject,jdbcType=TINYINT},
      serve_days_expect = #{record.serveDaysExpect,jdbcType=REAL},
      serve_days_actual = #{record.serveDaysActual,jdbcType=REAL},
      instead_candidate_id = #{record.insteadCandidateId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      `status` = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cctv.project.noah.outsource.entity.Attendance">
    update attendance
    <set>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="staffNo != null">
        staff_no = #{staffNo,jdbcType=INTEGER},
      </if>
      <if test="statisticsYear != null">
        statistics_year = #{statisticsYear,jdbcType=SMALLINT},
      </if>
      <if test="statisticsMonth != null">
        statistics_month = #{statisticsMonth,jdbcType=TINYINT},
      </if>
      <if test="arriveDate != null">
        arrive_date = #{arriveDate,jdbcType=DATE},
      </if>
      <if test="leaveDate != null">
        leave_date = #{leaveDate,jdbcType=DATE},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isReject != null">
        is_reject = #{isReject,jdbcType=TINYINT},
      </if>
      <if test="serveDaysExpect != null">
        serve_days_expect = #{serveDaysExpect,jdbcType=REAL},
      </if>
      <if test="serveDaysActual != null">
        serve_days_actual = #{serveDaysActual,jdbcType=REAL},
      </if>
      <if test="insteadCandidateId != null">
        instead_candidate_id = #{insteadCandidateId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where auto_id = #{autoId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cctv.project.noah.outsource.entity.Attendance">
    update attendance
    set order_no = #{orderNo,jdbcType=VARCHAR},
      staff_no = #{staffNo,jdbcType=INTEGER},
      statistics_year = #{statisticsYear,jdbcType=SMALLINT},
      statistics_month = #{statisticsMonth,jdbcType=TINYINT},
      arrive_date = #{arriveDate,jdbcType=DATE},
      leave_date = #{leaveDate,jdbcType=DATE},
      remark = #{remark,jdbcType=VARCHAR},
      is_reject = #{isReject,jdbcType=TINYINT},
      serve_days_expect = #{serveDaysExpect,jdbcType=REAL},
      serve_days_actual = #{serveDaysActual,jdbcType=REAL},
      instead_candidate_id = #{insteadCandidateId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=INTEGER}
    where auto_id = #{autoId,jdbcType=BIGINT}
  </update>
</mapper>