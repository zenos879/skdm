<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cctv.project.noah.outsource.mapper.AttendanceMapper">
    <resultMap type="com.cctv.project.noah.outsource.entity.Attendance" id="BaseResultMap">
        <result property="autoId"    column="auto_id"    />
        <result property="orderNo"    column="order_no"    />
        <result property="staffNo"    column="staff_no"    />
        <result property="statisticsYear"    column="statistics_year"    />
        <result property="statisticsMonth"    column="statistics_month"    />
        <result property="serveDaysExpect"    column="serve_days_expect"    />
        <result property="serveDaysActual"    column="serve_days_actual"    />
        <result property="createTime"    column="create_time"    />
        <result property="status"    column="status"    />
        <result property="staffName"    column="staff_name"    />
        <result property="remark"    column="remark"    />
        <result property="publicHolidays"    column="public_holidays"    />
    </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
    <sql id="selectAttendanceVo">
        SELECT
        a.auto_id,
        a.order_no,
        a.staff_no,
        a.statistics_year,
        a.statistics_month,
        a.serve_days_expect,
        a.serve_days_actual,
        a.create_time,
        s.staff_name,
        a.remark
        FROM
        attendance a
        LEFT JOIN staff_info s ON s.staff_no = a.staff_no
    </sql>
    <sql id="selectAttendanceCoreVo">
        SELECT
        a.auto_id,
        a.order_no,
        a.staff_no,
        a.statistics_year,
        a.statistics_month,
        a.serve_days_expect,
        a.create_time,
        s.staff_name,
        a.remark
        FROM
        attendance a
        LEFT JOIN staff_info s ON s.staff_no = a.staff_no
    </sql>
    <sql id="selectAttendanceAllVo">
        SELECT
            a.auto_id autoId,
            a.order_no orderNo,
            a.staff_no staffNo,
            a.statistics_year statisticsYear,
            a.statistics_month statisticsMonth,
            a.serve_days_expect serveDaysExpect,
            a.serve_days_actual serveDaysActual,
            s.staff_name staffName,
            d.department_name departmentName,
            p1.post_name postName,
            su.supplier_name supplierName,
            s.is_replace isReplace,
            (
                SELECT
                    staff_no
                FROM
                    staff_info s2
                WHERE
                    s2.auto_id = s.replace_group - 1
            ) replaceNo,
            s.arrive_date arriveDate,
            s.leave_date leaveDate,
            s.leave_reason leaveReason,
            a.remark
        FROM
            attendance a
        LEFT JOIN staff_info s ON s.staff_no = a.staff_no
        LEFT JOIN department_info d ON d.department_id = s.department_id
        LEFT JOIN post_info p1 ON p1.post_id = s.post_id
        LEFT JOIN supplier_info su ON su.supplier_id = s.supplier_id
    </sql>
    <select id="selectPublicHolidaysInfo" resultMap="BaseResultMap">
        <include refid="selectAttendanceVo"/>
        WHERE
        a.statistics_year=2020 AND a.statistics_month=3
        AND ((date_format(s.arrive_date,'%y%m%d')
        between date_format(#{firstDay},'%y%m%d')
        and date_format(#{lastDay},'%y%m%d'))
        OR (date_format(s.leave_date,'%y%m%d')
        between date_format(#{firstDay},'%y%m%d')
        and date_format(#{lastDay},'%y%m%d')))
    </select>
  <select id="selectByExample" parameterType="com.cctv.project.noah.outsource.entity.AttendanceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="selectAttendanceVo" />
    from attendance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="forUpdate != null and forUpdate == true">
      for update
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">

      <include refid="selectAttendanceVo"/>

    where a.auto_id = #{autoId,jdbcType=BIGINT}
  </select>
    <select id="selectByRepeat" parameterType="Attendance" resultMap="BaseResultMap">

      <include refid="selectAttendanceVo"/>

      where a.order_no = #{orderNo}
        and a.staff_no = #{staffNo}
        and a.statistics_year = #{statisticsYear}
        and a.statistics_month = #{statisticsMonth}
  </select>
    <select id="selectAttendanceList" parameterType="Attendance" resultMap="BaseResultMap">

        <include refid="selectAttendanceVo"/>

        <where>
            <if test="orderNo != null  and orderNo != ''"> and a.order_no = #{orderNo}</if>
            <if test="staffNo != null and staffNo != '' "> and a.staff_no = #{staffNo}</if>
            <if test="statisticsYear != null "> and a.statistics_year = #{statisticsYear}</if>
            <if test="departmentId != null "> and s.department_id = #{departmentId}</if>
            <if test="statisticsMonth != null "> and a.statistics_month = #{statisticsMonth}</if>
            <if test="serveDaysExpect != null "> and a.serve_days_expect = #{serveDaysExpect}</if>
            <if test="serveDaysActual != null "> and a.serve_days_actual = #{serveDaysActual}</if>
            <if test="status != null "> and a.status = #{status}</if>
            <if test="staffName != null  and staffName != ''"> and s.staff_name = #{staffName}</if>
            <if test="params!=null and params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
                AND date_format(a.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
            </if>
            <if test="params!=null and params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
                AND date_format(a.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
            </if>
        </where>
    </select>
    <sql id="selectCount">
        SELECT
        pro.project_name projectName,
        inter.order_no orderNo,
        dep.department_name departmentName,
        sta.staff_name staffName,
        sta.staff_no staffNo,
        pos.post_name postName,
        sup.supplier_name supplierName,
        a.serve_days_expect serveDaysExpect,
        a.serve_days_actual serveDaysActual,
        sta.arrive_date arriveDate,
        sta.leave_date leaveDate,
        a.auto_id autoId,
        a.remark remark
        FROM
        attendance a
        LEFT JOIN `staff_info` sta ON sta.staff_no = a.staff_no
        LEFT JOIN interview_person_ref inter ON inter.order_no = sta.order_no
        LEFT JOIN review_info re ON re.purchase_no = inter.purchase_no
        AND re.post_id = sta.post_id
        LEFT JOIN project_info pro ON pro.project_id = re.project_id
        LEFT JOIN department_info dep ON dep.department_id = sta.department_id
        LEFT JOIN supplier_info sup ON sup.supplier_id = sta.supplier_id
        LEFT JOIN post_info pos ON pos.post_id = sta.post_id
    </sql>
  <select id="selectAttendanceCount" parameterType="com.cctv.project.noah.outsource.entity.AttendanceCount" resultType="com.cctv.project.noah.outsource.entity.AttendanceCount">
    <include refid="selectCount"/>
    WHERE
      a.`statistics_year` = #{statisticsYear}
    AND a.statistics_month = #{statisticsMonth}
  </select>
    <select id="selectAttendanceCountBySelective" parameterType="com.cctv.project.noah.outsource.entity.AttendanceCount" resultType="com.cctv.project.noah.outsource.entity.AttendanceCount">
        <include refid="selectCount"/>
        <where>
            <if test="orderNo != null and orderNo != ''"> and inter.order_no like concat('%', #{orderNo}, '%')</if>
            <if test="staffNo != null and staffNo != ''"> and sta.staff_no like concat('%', #{staffNo}, '%')</if>
            <if test="serveDaysExpect != null "> and a.serve_days_expect = #{serveDaysExpect}</if>
            <if test="serveDaysActual != null "> and a.serve_days_actual = #{serveDaysActual}</if>
            <if test="statisticsYear != null "> and a.statistics_year = #{statisticsYear}</if>
            <if test="statisticsMonth != null "> and a.statistics_month = #{statisticsMonth}</if>
            <if test="staffName != null  and staffName != ''"> and sta.staff_name = #{staffName}</if>
        </where>
    </select>
    <select id="selectAttendanceCountAll" parameterType="com.cctv.project.noah.outsource.entity.AttendanceCount" resultType="com.cctv.project.noah.outsource.entity.AttendanceCount">
        <include refid="selectCount"/>
    </select>

    <select id="selectPrevMonthInfo" resultMap="BaseResultMap">
        SELECT
        auto_id,
        order_no,
        staff_no,
        #{statisticsYear} statistics_year,
        #{statisticsMonth} statistics_month,
        '0' serve_days_expect,
        '0' serve_days_actual,
        create_time,
        '' AS remark,
        '0' AS public_holidays
        FROM
        staff_info
        WHERE
        (
        date_format(arrive_date,'%y%m%d') &lt;= date_format(#{last},'%y%m%d')
        OR date_format(leave_date,'%y%m%d') BETWEEN date_format(#{first},'%y%m%d')
        AND date_format(#{last},'%y%m%d')
        )
        ORDER BY
        staff_no DESC
    </select>
  <select id="selectAttendanceCountByIds" parameterType="com.cctv.project.noah.outsource.entity.AttendanceCount" resultType="com.cctv.project.noah.outsource.entity.AttendanceCount">

      <include refid="selectCount"/>
    WHERE
    a.auto_id in
    <foreach collection="array" item="id"  open="(" separator="," close=")">
      #{id}
    </foreach>
  </select>
  <select id="selectBySelective" parameterType="com.cctv.project.noah.outsource.entity.Attendance" resultMap="BaseResultMap">

      <include refid="selectAttendanceVo"/>
      <where>
          <if test="departmentId != null "> and s.department_id = #{departmentId}</if>
          <if test="orderNo != null  and orderNo != ''"> and a.order_no like concat('%', #{orderNo}, '%')</if>
          <if test="staffNo != null and staffNo != ''"> and a.staff_no like concat('%', #{staffNo}, '%')</if>
          <if test="statisticsYear != null "> and a.statistics_year = #{statisticsYear}</if>
          <if test="statisticsMonth != null "> and a.statistics_month = #{statisticsMonth}</if>
          <if test="serveDaysExpect != null "> and a.serve_days_expect = #{serveDaysExpect}</if>
          <if test="serveDaysActual != null "> and a.serve_days_actual = #{serveDaysActual}</if>
      </where>
  </select>
    <select id="selectCoreBySelective" parameterType="com.cctv.project.noah.outsource.entity.Attendance" resultMap="BaseResultMap">

        <include refid="selectAttendanceCoreVo"/>
        <where>
            <if test="departmentId != null "> and s.department_id = #{departmentId}</if>
            <if test="orderNo != null  and orderNo != ''"> and a.order_no like concat('%', #{orderNo}, '%')</if>
            <if test="staffNo != null and staffNo != ''"> and a.staff_no like concat('%', #{staffNo}, '%')</if>
            <if test="statisticsYear != null "> and a.statistics_year = #{statisticsYear}</if>
            <if test="statisticsMonth != null "> and a.statistics_month = #{statisticsMonth}</if>
            <if test="serveDaysExpect != null "> and a.serve_days_expect = #{serveDaysExpect}</if>
            <if test="serveDaysActual != null "> and a.serve_days_actual = #{serveDaysActual}</if>
        </where>
    </select>
    <select id="selectAllBySelective" parameterType="com.cctv.project.noah.outsource.entity.Attendance" resultType="com.cctv.project.noah.outsource.entity.AttendanceAll">

        <include refid="selectAttendanceAllVo"/>
        <where>
            <if test="departmentId != null "> and s.department_id = #{departmentId}</if>
            <if test="orderNo != null  and orderNo != ''"> and a.order_no like concat('%', #{orderNo}, '%')</if>
            <if test="staffNo != null and staffNo != ''"> and a.staff_no like concat('%', #{staffNo}, '%')</if>
            <if test="statisticsYear != null "> and a.statistics_year = #{statisticsYear}</if>
            <if test="statisticsMonth != null "> and a.statistics_month = #{statisticsMonth}</if>
            <if test="serveDaysExpect != null "> and a.serve_days_expect = #{serveDaysExpect}</if>
            <if test="serveDaysActual != null "> and a.serve_days_actual = #{serveDaysActual}</if>
        </where>
    </select>
  <select id="selectByIds" resultMap="BaseResultMap">

      <include refid="selectAttendanceVo"/>

    where a.auto_id in
    <foreach collection="array" item="id"  open="(" separator="," close=")">
      #{id}
    </foreach>
  </select>
    <select id="selectCoreByIds" resultMap="BaseResultMap">
        <include refid="selectAttendanceCoreVo"/>
        where a.auto_id in
        <foreach collection="array" item="id"  open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    <select id="selectAllByIds" resultType="com.cctv.project.noah.outsource.entity.AttendanceAll">
        <include refid="selectAttendanceAllVo"/>
        where a.auto_id in
        <foreach collection="array" item="id"  open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from attendance
    where auto_id = #{autoId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.cctv.project.noah.outsource.entity.AttendanceExample">
    delete from attendance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.cctv.project.noah.outsource.entity.AttendanceExample" resultType="java.lang.Long">
    select count(*) from attendance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update attendance
    <set>
      <if test="record.autoId != null">
        auto_id = #{record.autoId,jdbcType=BIGINT},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.staffNo != null">
        staff_no = #{record.staffNo,jdbcType=VARCHAR},
      </if>
      <if test="record.statisticsYear != null">
        statistics_year = #{record.statisticsYear,jdbcType=SMALLINT},
      </if>
      <if test="record.statisticsMonth != null">
        statistics_month = #{record.statisticsMonth,jdbcType=TINYINT},
      </if>
      <if test="record.arriveDate != null">
        arrive_date = #{record.arriveDate,jdbcType=DATE},
      </if>
      <if test="record.leaveDate != null">
        leave_date = #{record.leaveDate,jdbcType=DATE},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.isReject != null">
        is_reject = #{record.isReject,jdbcType=TINYINT},
      </if>
      <if test="record.serveDaysExpect != null">
        serve_days_expect = #{record.serveDaysExpect,jdbcType=REAL},
      </if>
      <if test="record.serveDaysActual != null">
        serve_days_actual = #{record.serveDaysActual,jdbcType=REAL},
      </if>
      <if test="record.insteadCandidateId != null">
        instead_candidate_id = #{record.insteadCandidateId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update attendance
    set auto_id = #{record.autoId,jdbcType=BIGINT},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      staff_no = #{record.staffNo,jdbcType=VARCHAR},
      statistics_year = #{record.statisticsYear,jdbcType=SMALLINT},
      statistics_month = #{record.statisticsMonth,jdbcType=TINYINT},
      arrive_date = #{record.arriveDate,jdbcType=DATE},
      leave_date = #{record.leaveDate,jdbcType=DATE},
      remark = #{record.remark,jdbcType=VARCHAR},
      is_reject = #{record.isReject,jdbcType=TINYINT},
      serve_days_expect = #{record.serveDaysExpect,jdbcType=REAL},
      serve_days_actual = #{record.serveDaysActual,jdbcType=REAL},
      instead_candidate_id = #{record.insteadCandidateId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      `status` = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
    <insert id="insertAttendance" parameterType="Attendance" useGeneratedKeys="true" keyProperty="autoId">
        insert into attendance
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderNo != null  and orderNo != ''">order_no,</if>
            <if test="staffNo != null and staffNo != ''">staff_no,</if>
            <if test="statisticsYear != null ">statistics_year,</if>
            <if test="statisticsMonth != null ">statistics_month,</if>
            <if test="serveDaysExpect != null ">serve_days_expect,</if>
            <if test="serveDaysActual != null ">serve_days_actual,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="status != null ">status,</if>
            <if test="remark != null  and remark != ''">remark,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderNo != null  and orderNo != ''">#{orderNo},</if>
            <if test="staffNo != null ">#{staffNo},</if>
            <if test="statisticsYear != null ">#{statisticsYear},</if>
            <if test="statisticsMonth != null ">#{statisticsMonth},</if>
            <if test="serveDaysExpect != null ">#{serveDaysExpect},</if>
            <if test="serveDaysActual != null ">#{serveDaysActual},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="status != null ">#{status},</if>
            <if test="remark != null  and remark != ''">#{remark},</if>
        </trim>
    </insert>
    <insert id="insertBatch" useGeneratedKeys="true" keyProperty="autoId">
        insert into attendance (order_no,staff_no,statistics_year,statistics_month,serve_days_expect,serve_days_actual,create_time,status,remark)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.order_no},#{item.staff_no},#{item.statistics_year},#{item.statistics_month},#{item.serve_days_expect},#{item.serve_days_actual},#{item.create_time},#{item.status},#{item.remark})
        </foreach>
    </insert>

    <update id="updateAttendance" parameterType="Attendance">
        update attendance
        <trim prefix="SET" suffixOverrides=",">
            <if test="orderNo != null  and orderNo != ''">order_no = #{orderNo},</if>
            <if test="staffNo != null and staffNo != ''">staff_no = #{staffNo},</if>
            <if test="statisticsYear != null ">statistics_year = #{statisticsYear},</if>
            <if test="statisticsMonth != null ">statistics_month = #{statisticsMonth},</if>
            <if test="serveDaysExpect != null ">serve_days_expect = #{serveDaysExpect},</if>
            <if test="serveDaysActual != null ">serve_days_actual = #{serveDaysActual},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="status != null ">status = #{status},</if>
            <if test="staffName != null  and staffName != ''">staff_name = #{staffName},</if>
            <if test="remark != null  and remark != ''">remark = #{remark},</if>
        </trim>

        where auto_id = #{autoId}
    </update>
    <update id="update" parameterType="Attendance">
        update attendance
        <trim prefix="SET" suffixOverrides=",">
            serve_days_actual = #{serveDaysActual},
            <if test="serveDaysExpect != null ">serve_days_expect = #{serveDaysExpect}</if>
            <if test="remark != null and remark !=''">remark = #{remark}</if>
        </trim>
        where auto_id = #{autoId}
    </update>

    <delete id="deleteAttendanceById" parameterType="Long">
        delete from attendance where auto_id = #{autoId}
    </delete>

    <delete id="deleteAttendanceByIds" parameterType="String">
        delete from attendance where auto_id in
        <foreach item="autoId" collection="array" open="(" separator="," close=")">
            #{autoId}
        </foreach>
    </delete>
</mapper>