<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cctv.project.noah.outsource.mapper.ReviewPersonRefMapper">
  <resultMap id="BaseResultMap" type="com.cctv.project.noah.outsource.entity.ReviewPersonRef">
    <id column="auto_id" jdbcType="INTEGER" property="autoId" />
    <result column="purchase_no" jdbcType="VARCHAR" property="purchaseNo" />
    <result column="supplier_id" jdbcType="INTEGER" property="supplierId" />
    <result column="candidate_id" jdbcType="INTEGER" property="candidateId" />
    <result column="is_notify_interview" jdbcType="TINYINT" property="isNotifyInterview" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    auto_id, purchase_no, supplier_id, candidate_id, is_notify_interview, create_time
  </sql>
  <select id="selectByExample" parameterType="com.cctv.project.noah.outsource.entity.ReviewPersonRefExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from review_person_ref
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="forUpdate != null and forUpdate == true">
      for update
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from review_person_ref
    where auto_id = #{autoId,jdbcType=INTEGER}
  </select>
  <select id="selectByIds" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
    r.auto_id auto_id,
    r.purchase_no purchase_no,
    r.supplier_id supplier_id,
    r.candidate_id candidate_id,
    r.is_notify_interview is_notify_interview,
    r.create_time create_time,
    s.supplier_name supplierName,
    p.candidate_name candidateName
    FROM
    review_person_ref r
    INNER JOIN supplier_info s
    INNER JOIN person_info p
    WHERE
    r.candidate_id = p.candidate_id
    AND r.supplier_id = s.supplier_id and r.auto_id in
    <foreach collection="array" item="id"  open="(" separator="," close=")">
      #{id}
    </foreach>
  </select>

  <select id="selectBySelective" parameterType="com.cctv.project.noah.outsource.entity.ReviewPersonRef" resultMap="BaseResultMap">
    SELECT
    r.auto_id auto_id,
    r.purchase_no purchase_no,
    r.supplier_id supplier_id,
    r.candidate_id candidate_id,
    r.is_notify_interview is_notify_interview,
    r.create_time create_time,
    s.supplier_name supplierName,
    p.candidate_name candidateName
    FROM
    review_person_ref r
    INNER JOIN supplier_info s
    INNER JOIN person_info p
    WHERE
    r.candidate_id = p.candidate_id
    AND r.supplier_id = s.supplier_id
    <if test="autoId != null">
      AND r.auto_id = #{autoId,jdbcType=INTEGER}
    </if>
    <if test="purchaseNo != null and purchaseNo != ''">
      AND r.purchase_no like concat('%', #{purchaseNo}, '%')
    </if>
    <if test="supplierId != null">
      AND r.supplier_id = #{supplierId,jdbcType=INTEGER}
    </if>
    <if test="candidateId != null">
      AND r.candidate_id = #{candidateId,jdbcType=INTEGER}
    </if>
    <if test="isNotifyInterview != null">
      AND r.is_notify_interview = #{isNotifyInterview,jdbcType=TINYINT}
    </if>
    <if test="params!=null and params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
      AND date_format(r.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
    </if>
    <if test="params!=null and params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
      AND date_format(r.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
    </if>
  </select>
  <select id="selectByRepeat" parameterType="com.cctv.project.noah.outsource.entity.ReviewPersonRef" resultMap="BaseResultMap">
    SELECT
    r.auto_id auto_id,
    r.purchase_no purchase_no,
    r.supplier_id supplier_id,
    r.candidate_id candidate_id,
    r.is_notify_interview is_notify_interview,
    r.create_time create_time,
    s.supplier_name supplierName,
    p.candidate_name candidateName
    FROM
    review_person_ref r
    INNER JOIN supplier_info s
    INNER JOIN person_info p
    WHERE
    r.candidate_id = p.candidate_id
    AND r.supplier_id = s.supplier_id

    <if test="purchaseNo != null and purchaseNo != ''">
      AND r.purchase_no = #{purchaseNo}
    </if>
    <if test="supplierId != null">
      AND r.supplier_id = #{supplierId,jdbcType=INTEGER}
    </if>
    <if test="candidateId != null">
      AND r.candidate_id = #{candidateId,jdbcType=INTEGER}
    </if>
    <if test="isNotifyInterview != null">
      AND r.is_notify_interview = #{isNotifyInterview,jdbcType=TINYINT}
    </if>
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from review_person_ref
    where auto_id = #{autoId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cctv.project.noah.outsource.entity.ReviewPersonRefExample">
    delete from review_person_ref
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="auto_id" keyProperty="autoId" parameterType="com.cctv.project.noah.outsource.entity.ReviewPersonRef" useGeneratedKeys="true">
    insert into review_person_ref (purchase_no, supplier_id, candidate_id, 
      is_notify_interview, create_time)
    values (#{purchaseNo,jdbcType=VARCHAR}, #{supplierId,jdbcType=INTEGER}, #{candidateId,jdbcType=INTEGER}, 
      #{isNotifyInterview,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="auto_id" keyProperty="autoId" parameterType="com.cctv.project.noah.outsource.entity.ReviewPersonRef" useGeneratedKeys="true">
    insert into review_person_ref
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="purchaseNo != null">
        purchase_no,
      </if>
      <if test="supplierId != null">
        supplier_id,
      </if>
      <if test="candidateId != null">
        candidate_id,
      </if>
      <if test="isNotifyInterview != null">
        is_notify_interview,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="purchaseNo != null">
        #{purchaseNo,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null">
        #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="candidateId != null">
        #{candidateId,jdbcType=INTEGER},
      </if>
      <if test="isNotifyInterview != null">
        #{isNotifyInterview,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cctv.project.noah.outsource.entity.ReviewPersonRefExample" resultType="java.lang.Long">
    select count(*) from review_person_ref
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update review_person_ref
    <set>
      <if test="record.autoId != null">
        auto_id = #{record.autoId,jdbcType=INTEGER},
      </if>
      <if test="record.purchaseNo != null">
        purchase_no = #{record.purchaseNo,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierId != null">
        supplier_id = #{record.supplierId,jdbcType=INTEGER},
      </if>
      <if test="record.candidateId != null">
        candidate_id = #{record.candidateId,jdbcType=INTEGER},
      </if>
      <if test="record.isNotifyInterview != null">
        is_notify_interview = #{record.isNotifyInterview,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update review_person_ref
    set auto_id = #{record.autoId,jdbcType=INTEGER},
      purchase_no = #{record.purchaseNo,jdbcType=VARCHAR},
      supplier_id = #{record.supplierId,jdbcType=INTEGER},
      candidate_id = #{record.candidateId,jdbcType=INTEGER},
      is_notify_interview = #{record.isNotifyInterview,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cctv.project.noah.outsource.entity.ReviewPersonRef">
    update review_person_ref
    <set>
      <if test="purchaseNo != null">
        purchase_no = #{purchaseNo,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null">
        supplier_id = #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="candidateId != null">
        candidate_id = #{candidateId,jdbcType=INTEGER},
      </if>
      <if test="isNotifyInterview != null">
        is_notify_interview = #{isNotifyInterview,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where auto_id = #{autoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cctv.project.noah.outsource.entity.ReviewPersonRef">
    update review_person_ref
    set purchase_no = #{purchaseNo,jdbcType=VARCHAR},
      supplier_id = #{supplierId,jdbcType=INTEGER},
      candidate_id = #{candidateId,jdbcType=INTEGER},
      is_notify_interview = #{isNotifyInterview,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where auto_id = #{autoId,jdbcType=INTEGER}
  </update>
</mapper>