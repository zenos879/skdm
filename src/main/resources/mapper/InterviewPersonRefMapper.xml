<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cctv.project.noah.outsource.mapper.InterviewPersonRefMapper">
    <resultMap id="BaseResultMap" type="com.cctv.project.noah.outsource.entity.InterviewPersonRef">
        <id column="auto_id" jdbcType="INTEGER" property="autoId"/>
        <result column="purchase_no" jdbcType="VARCHAR" property="purchaseNo"/>
        <result column="order_no" jdbcType="VARCHAR" property="orderNo"/>
        <result column="staff_no" jdbcType="VARCHAR" property="staffNo"/>
        <result column="staff_name" jdbcType="VARCHAR" property="staffName"/>
        <result column="id_card" jdbcType="VARCHAR" property="idCard"/>
        <result column="supplier_id" jdbcType="INTEGER" property="supplierId"/>
        <result column="post_id" jdbcType="INTEGER" property="postId"/>
        <result column="is_interview" jdbcType="INTEGER" property="isInterview"/>
        <result column="notify_date" jdbcType="DATE" property="notifyDate"/>
        <result column="interview_date" jdbcType="DATE" property="interviewDate"/>
        <result column="is_pass" jdbcType="INTEGER" property="isPass"/>
        <result column="is_reject" jdbcType="INTEGER" property="isReject"/>
        <result column="reason" jdbcType="VARCHAR" property="reason"/>
        <result column="arrive_date" jdbcType="DATE" property="arriveDate"/>
        <result column="leave_date" jdbcType="DATE" property="leaveDate"/>
        <result column="leave_reason" jdbcType="VARCHAR" property="leaveReason"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="project_id" jdbcType="INTEGER" property="projectId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    auto_id, purchase_no, order_no, staff_no, staff_name, id_card, supplier_id, post_id,
    project_id, is_interview, notify_date, interview_date, is_pass, is_reject, reason, arrive_date, leave_date, leave_reason, create_time, `status`
  </sql>
    <sql id="selectJoin">
        ipr.auto_id,
        ipr.purchase_no,
        ipr.order_no,
        ipr.staff_no,
        ipr.staff_name,
        ipr.id_card,
        ipr.supplier_id,
        ipr.post_id,
        ipr.project_id,
        ipr.is_interview,
        ipr.notify_date,
        ipr.interview_date,
        ipr.is_pass,
        ipr.is_reject,
        ipr.reason,
        ipr.arrive_date,
        ipr.leave_date,
        ipr.leave_reason,
        ipr.create_time,
        si.supplier_name,
        pi.post_name
        from interview_person_ref ipr
        left join supplier_info si on ipr.supplier_id = si.supplier_id
        left join post_info pi on ipr.post_id = pi.post_id
    </sql>
    <select id="selectByExample" parameterType="com.cctv.project.noah.outsource.entity.InterviewPersonRefExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="selectJoin"/>
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
        <if test="forUpdate != null and forUpdate == true">
            for update
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from interview_person_ref
        where auto_id = #{autoId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from interview_person_ref
    where auto_id = #{autoId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.cctv.project.noah.outsource.entity.InterviewPersonRefExample">
        delete from interview_person_ref
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="auto_id" keyProperty="autoId"
            parameterType="com.cctv.project.noah.outsource.entity.InterviewPersonRef" useGeneratedKeys="true">
    insert into interview_person_ref (purchase_no, order_no, staff_no,
      staff_name, id_card, supplier_id,
      post_id, project_id, is_interview,
      notify_date, interview_date, is_pass,
      is_reject,
      reason, arrive_date, leave_date,
      leave_reason, create_time, `status`
      )
    values (#{purchaseNo,jdbcType=VARCHAR}, #{orderNo,jdbcType=VARCHAR}, #{staffNo,jdbcType=VARCHAR},
      #{staffName,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, #{supplierId,jdbcType=INTEGER},
      #{postId,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, #{isInterview,jdbcType=INTEGER},
      #{notifyDate,jdbcType=DATE}, #{interviewDate,jdbcType=DATE}, #{isPass,jdbcType=INTEGER},
      #{isReject,jdbcType=INTEGER},
      #{reason,jdbcType=VARCHAR}, #{arriveDate,jdbcType=DATE}, #{leaveDate,jdbcType=DATE},
      #{leaveReason,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" keyColumn="auto_id" keyProperty="autoId"
            parameterType="com.cctv.project.noah.outsource.entity.InterviewPersonRef" useGeneratedKeys="true">
        insert into interview_person_ref
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="purchaseNo != null">
                purchase_no,
            </if>
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="staffNo != null">
                staff_no,
            </if>
            <if test="staffName != null">
                staff_name,
            </if>
            <if test="idCard != null">
                id_card,
            </if>
            <if test="supplierId != null">
                supplier_id,
            </if>
            <if test="postId != null">
                post_id,
            </if>
            <if test="isInterview != null">
                is_interview,
            </if>
            <if test="notifyDate != null">
                notify_date,
            </if>
            <if test="interviewDate != null">
                interview_date,
            </if>
            <if test="isPass != null">
                is_pass,
            </if>
            <if test="isReject != null">
                is_reject,
            </if>
            <if test="reason != null">
                reason,
            </if>
            <if test="arriveDate != null">
                arrive_date,
            </if>
            <if test="leaveDate != null">
                leave_date,
            </if>
            <if test="leaveReason != null">
                leave_reason,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="projectId != null">
                project_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="purchaseNo != null">
                #{purchaseNo,jdbcType=VARCHAR},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="staffNo != null">
                #{staffNo,jdbcType=VARCHAR},
            </if>
            <if test="staffName != null">
                #{staffName,jdbcType=VARCHAR},
            </if>
            <if test="idCard != null">
                #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="supplierId != null">
                #{supplierId,jdbcType=INTEGER},
            </if>
            <if test="postId != null">
                #{postId,jdbcType=INTEGER},
            </if>
            <if test="isInterview != null">
                #{isInterview,jdbcType=INTEGER},
            </if>
            <if test="notifyDate != null">
                #{notifyDate,jdbcType=DATE},
            </if>
            <if test="interviewDate != null">
                #{interviewDate,jdbcType=DATE},
            </if>
            <if test="isPass != null">
                #{isPass,jdbcType=INTEGER},
            </if>
            <if test="isReject != null">
                #{isReject,jdbcType=INTEGER},
            </if>
            <if test="reason != null">
                #{reason,jdbcType=VARCHAR},
            </if>
            <if test="arriveDate != null">
                #{arriveDate,jdbcType=DATE},
            </if>
            <if test="leaveDate != null">
                #{leaveDate,jdbcType=DATE},
            </if>
            <if test="leaveReason != null">
                #{leaveReason,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="projectId != null">
                #{projectId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.cctv.project.noah.outsource.entity.InterviewPersonRefExample"
            resultType="java.lang.Long">
        select count(*) from interview_person_ref
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update interview_person_ref
        <set>
            <if test="record.autoId != null">
                auto_id = #{record.autoId,jdbcType=INTEGER},
            </if>
            <if test="record.purchaseNo != null">
                purchase_no = #{record.purchaseNo,jdbcType=VARCHAR},
            </if>
            <if test="record.orderNo != null">
                order_no = #{record.orderNo,jdbcType=VARCHAR},
            </if>
            <if test="record.staffNo != null">
                staff_no = #{record.staffNo,jdbcType=VARCHAR},
            </if>
            <if test="record.staffName != null">
                staff_name = #{record.staffName,jdbcType=VARCHAR},
            </if>
            <if test="record.idCard != null">
                id_card = #{record.idCard,jdbcType=VARCHAR},
            </if>
            <if test="record.supplierId != null">
                supplier_id = #{record.supplierId,jdbcType=INTEGER},
            </if>
            <if test="record.postId != null">
                post_id = #{record.postId,jdbcType=INTEGER},
            </if>
            <if test="record.isInterview != null">
                is_interview = #{record.isInterview,jdbcType=INTEGER},
            </if>
            <if test="record.notifyDate != null">
                notify_date = #{record.notifyDate,jdbcType=DATE},
            </if>
            <if test="record.interviewDate != null">
                interview_date = #{record.interviewDate,jdbcType=DATE},
            </if>
            <if test="record.isPass != null">
                is_pass = #{record.isPass,jdbcType=INTEGER},
            </if>
            <if test="record.isReject != null">
                is_reject = #{record.isReject,jdbcType=INTEGER},
            </if>
            <if test="record.reason != null">
                reason = #{record.reason,jdbcType=VARCHAR},
            </if>
            <if test="record.arriveDate != null">
                arrive_date = #{record.arriveDate,jdbcType=DATE},
            </if>
            <if test="record.leaveDate != null">
                leave_date = #{record.leaveDate,jdbcType=DATE},
            </if>
            <if test="record.leaveReason != null">
                leave_reason = #{record.leaveReason,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.status != null">
                `status` = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.projectId != null">
                project_id = #{record.projectId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update interview_person_ref
        set auto_id = #{record.autoId,jdbcType=INTEGER},
        purchase_no = #{record.purchaseNo,jdbcType=VARCHAR},
        order_no = #{record.orderNo,jdbcType=VARCHAR},
        staff_no = #{record.staffNo,jdbcType=VARCHAR},
        staff_name = #{record.staffName,jdbcType=VARCHAR},
        id_card = #{record.idCard,jdbcType=VARCHAR},
        supplier_id = #{record.supplierId,jdbcType=INTEGER},
        post_id = #{record.postId,jdbcType=INTEGER},
        is_interview = #{record.isInterview,jdbcType=INTEGER},
        notify_date = #{record.notifyDate,jdbcType=DATE},
        interview_date = #{record.interviewDate,jdbcType=DATE},
        is_pass = #{record.isPass,jdbcType=INTEGER},
        is_reject = #{record.isReject,jdbcType=INTEGER},
        reason = #{record.reason,jdbcType=VARCHAR},
        arrive_date = #{record.arriveDate,jdbcType=DATE},
        leave_date = #{record.leaveDate,jdbcType=DATE},
        leave_reason = #{record.leaveReason,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        `status` = #{record.status,jdbcType=INTEGER},
        project_id = #{record.projectId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.cctv.project.noah.outsource.entity.InterviewPersonRef">
        update interview_person_ref
        <set>
            <if test="purchaseNo != null">
                purchase_no = #{purchaseNo,jdbcType=VARCHAR},
            </if>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="staffNo != null">
                staff_no = #{staffNo,jdbcType=VARCHAR},
            </if>
            <if test="staffName != null">
                staff_name = #{staffName,jdbcType=VARCHAR},
            </if>
            <if test="idCard != null">
                id_card = #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="supplierId != null">
                supplier_id = #{supplierId,jdbcType=INTEGER},
            </if>
            <if test="postId != null">
                post_id = #{postId,jdbcType=INTEGER},
            </if>
            <if test="isInterview != null">
                is_interview = #{isInterview,jdbcType=INTEGER},
            </if>
            <if test="notifyDate != null">
                notify_date = #{notifyDate,jdbcType=DATE},
            </if>
            <if test="interviewDate != null">
                interview_date = #{interviewDate,jdbcType=DATE},
            </if>
            <if test="isPass != null">
                is_pass = #{isPass,jdbcType=INTEGER},
            </if>
            <if test="isReject != null">
                is_reject = #{isReject,jdbcType=INTEGER},
            </if>
            <if test="reason != null">
                reason = #{reason,jdbcType=VARCHAR},
            </if>
            <if test="arriveDate != null">
                arrive_date = #{arriveDate,jdbcType=DATE},
            </if>
            <if test="leaveDate != null">
                leave_date = #{leaveDate,jdbcType=DATE},
            </if>
            <if test="leaveReason != null">
                leave_reason = #{leaveReason,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=INTEGER},
            </if>
            <if test="projectId != null">
                project_id = #{projectId,jdbcType=INTEGER},
            </if>
        </set>
        where auto_id = #{autoId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.cctv.project.noah.outsource.entity.InterviewPersonRef">
    update interview_person_ref
    set purchase_no = #{purchaseNo,jdbcType=VARCHAR},
      order_no = #{orderNo,jdbcType=VARCHAR},
      staff_no = #{staffNo,jdbcType=VARCHAR},
      staff_name = #{staffName,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      supplier_id = #{supplierId,jdbcType=INTEGER},
      post_id = #{postId,jdbcType=INTEGER},
      is_interview = #{isInterview,jdbcType=INTEGER},
      notify_date = #{notifyDate,jdbcType=DATE},
      interview_date = #{interviewDate,jdbcType=DATE},
      is_pass = #{isPass,jdbcType=INTEGER},
      is_reject = #{isReject,jdbcType=INTEGER},
      reason = #{reason,jdbcType=VARCHAR},
      arrive_date = #{arriveDate,jdbcType=DATE},
      leave_date = #{leaveDate,jdbcType=DATE},
      leave_reason = #{leaveReason,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=INTEGER},
      project_id = #{projectId,jdbcType=INTEGER}
    where auto_id = #{autoId,jdbcType=INTEGER}
  </update>
</mapper>